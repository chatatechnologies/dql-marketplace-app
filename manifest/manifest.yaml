---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/name: "$INSTANCE_NAME"
  name: $NAMESPACE

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: configmap-deployer
  namespace: $NAMESPACE
  labels:
    app.kubernetes.io/name: $INSTANCE_NAME-configmap
    app.kubernetes.io/component: $INSTANCE_NAME-configmap
data:
  dql_namespace: "${NAMESPACE}"
  emissary_namespace: "${NAMESPACE}"
  portal_subdomain: "${PORTAL_SUBDOMAIN}"
  backend_subdomain: "${BACKEND_SUBDOMAIN}"
  webapp_subdomain: "${WEBAPP_SUBDOMAIN}"
  excel_subdomain: "${EXCEL_SUBDOMAIN}"
  owner_email: "${ADMIN_EMAIL}"
  owner_first_name: "${ADMIN_FIRST_NAME}"
  owner_last_name: "${ADMIN_LAST_NAME}"
  release_version: "${RELEASE_VERSION}"
  index_bucket: "${INDEX_BUCKET}"
  integrator_bucket: "${INTEGRATOR_BUCKET}"
  integrator_id: "${INTEGRATOR_ID}"
  cloud: "gcp"
  spot_enabled: "${SPOT_INSTANCES_ENABLED}" # Set to true or false
  destination_registry: "${DESTINATION_REGISTRY}"
  helm_repo_url: "${HELM_REPO_URL}"
  post_deployment_files_url: "${POST_DEPLOYMENTS_URL}"
  resource_override_all_replicas: "${REPLICAS_OVERRIDE_VALUE}"
  resource_override_all_cpu_request: "${CPU_OVERRIDE_VALUE}"
  tls_certificate_value: "${TLS_CERTIFICATE_VALUE}"
  tls_private_key_value: "${TLS_PRIVATE_KEY_VALUE}"

---

apiVersion: v1
kind: Secret
metadata:
  name: deployable-integrator-pem
  namespace: $NAMESPACE
  labels:
    app.kubernetes.io/name: $INSTANCE_NAME-pem
    app.kubernetes.io/component: $INSTANCE_NAME-pem
type: Opaque
data:
  deployable-integrator.pem: "$PEM_SECRET"

---

apiVersion: v1
kind: Secret
metadata:
  name: integrator-volume-key
  namespace: $NAMESPACE
  labels:
    app.kubernetes.io/name: $INSTANCE_NAME-volume
    app.kubernetes.io/component: $INSTANCE_NAME-volume
type: Opaque
data:
  chata-secret.json: "$JSON_SECRET"

---

apiVersion: v1
kind: Secret
metadata:
  name: user-auth-volume
  namespace: $NAMESPACE
  labels:
    app.kubernetes.io/name: $INSTANCE_NAME-auth
    app.kubernetes.io/component: $INSTANCE_NAME-auth
type: Opaque
data:
  jwt-credentials-prod.json: "$JWT_SECRET"

---
# Docker secret (To be removed later)
apiVersion: v1
kind: Secret
metadata:
  name: chata-secret
  namespace: $NAMESPACE
  labels:
    app.kubernetes.io/name: $INSTANCE_NAME-imagepullsecret
    app.kubernetes.io/component: $INSTANCE_NAME-imagepullsecret
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: "$DOCKER_SECRET"

---

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: deployable-vm-pvc
  namespace: $NAMESPACE
  labels:
    app.kubernetes.io/name: $INSTANCE_NAME-pvc
    app.kubernetes.io/component: $INSTANCE_NAME-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
  storageClassName: $STORAGE_CLASS

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: deployable-vm
  namespace: $NAMESPACE
spec:
  serviceName: deployable-vm
  replicas: 1
  selector:
    matchLabels:
      app: deployable-vm
  template:
    metadata:
      labels:
        app: deployable-vm
        app.kubernetes.io/name: "$INSTANCE_NAME"
    spec:
      serviceAccountName: $SERVICE_ACCOUNT
      containers:
      - image: $DEPLOYABLE_VM_IMAGE
        imagePullPolicy: Always
        name: deployable-vm-image
        envFrom:
          - configMapRef:
              name: configmap-deployer
        lifecycle:
          postStart:
            exec:
              command:
                - sh
                - -c
                - gcloud auth activate-service-account --key-file=/var/secrets/google/chata-secret.json;
        volumeMounts:
        - mountPath: /var/secrets/google/
          name: gcp-key
          readOnly: true
        - mountPath: /var/secrets/pem/
          name: deployable-integrator-pem
          readOnly: true
        - mountPath: /var/secrets/user/
          name: user-auth-volume
          readOnly: true
        # - mountPath: /var/secrets/test/
        #   name: test-volume
        #   readOnly: true
        - name: deployable-pvc
          mountPath: "/deployable_files"
        readinessProbe:
          exec:
            command:
              - sh
              - -c
              - "sleep 1800; exit 0"  # Adjust the delay here (30 minutes in this example)
          initialDelaySeconds: 0
          periodSeconds: 10
      volumes:
      - name: gcp-key
        secret:
          secretName: integrator-volume-key
      - name: deployable-integrator-pem  
        secret:
          secretName: deployable-integrator-pem
      - name: user-auth-volume  
        secret:
          secretName: user-auth-volume
      # - name: test-volume  
      #   secret:
      #     secretName: test-volume
      - name: deployable-pvc
        persistentVolumeClaim:
          claimName: deployable-vm-pvc

